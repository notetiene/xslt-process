2001-04-01  Ovidiu Predescu  <ovidiu@cup.hp.com>

	* lisp/xslt-process.el: Setup keybindings for the stop and quit
	actions.
	
	Correctly handle, by making the minor-mode-alist buffer local,
	different minor mode line strings in distinct buffers.
	
	Added execution-context-error-function as function hook to be
	called when an error message is reported.
	
	Remove the XSLT-process mode from a file, when xslt-process-mode
	is invoked with a negative argument. The menu is correctly removed
	now.
	
	Restarting the XSLT debugger now asks the user. All the step,
	next, continue and finish actions now check for the current state
	of the XSLT debugger before doing anything.
	
	Quit now asks the user whether to delete the breakpoints from the
	source files.
	
	Graciously reset the Emacs' state variables when the XSLT process
	buffer is killed.

	* java/xslt/debugger/saxon/XSLTDebugger.java: Setup the
	StreamResult based on the outStream instance variable. Don't close
	the output stream after the processing is complete.

	* java/xslt/debugger/cmdline/Controller.java: Pass the Controller
	instance in the Observer's constructor.

	* java/xslt/debugger/cmdline/EmacsObserver.java: Implement
	debuggerProcessStarted(). Pass the Controller instance in the
	constructor.

	* java/xslt/debugger/cmdline/CmdLineObserver.java: Implement
	debuggerProcessStarted().

	* java/xslt/debugger/Observer.java: Added debuggerProcessStarted.

	* java/xslt/debugger/AbstractXSLTDebugger.java: Use an output
	stream instead of an output file name. This allows a socket stream
	to be set up for outputting the result of the XSLT processing.

2001-03-30  Ovidiu Predescu  <ovidiu@cup.hp.com>

	* lisp/xslt-process.el: Better handling of menu items enabling and
	disabling. Added initial support for restarting the XSLT debugger
	process. Correctly handle unhighlighting of breakpoints. Print
	notification message when the XSLT processor finishes processing
	or when it encounters an error.

	* java/xslt/debugger/saxon/XSLTDebugger.java: Invoke the observer
	instance to handle errors.

	* java/xslt/debugger/saxon/SaxonTraceListener.java: Comment out
	unnecessary printlns.

	* java/xslt/debugger/cmdline/Controller.java: Removed the code to
	handle the restarting during a processor run. Expect this to
	happen in the front-end code, where there's much more control.

	* java/xslt/debugger/Observer.java: Added processorFinished and
	caughtException.
	* java/xslt/debugger/cmdline/CmdLineObserver.java: Likewise.
	* java/xslt/debugger/cmdline/EmacsObserver.java: Likewise.

	* lisp/xslt-process.el: Start the XSLT debugger in Emacs
	mode. Handle Emacs formatted output from the debugger. Now handles
	step, next and continue operations in an XSLT debug mode
	buffer. Automatically opens debugged files not present in Emacs
	and switch them to the XSLT debug mode.

	* java/xslt/debugger/cmdline/Controller.java: Allow specifying the
	processor to be used and whether notifications should be formatted
	for Emacs.

	* java/xslt/debugger/cmdline/EmacsObserver.java: Prints messages
	formatted such that they contain code that can be executed
	directly by Emacs.

2001-03-28  Ovidiu Predescu  <ovidiu@cup.hp.com>

	* lisp/xslt-process.el: Correctly display the mode
	indicator. Breakpoint related functions reworked.

2001-03-24  Ovidiu Predescu  <ovidiu@cup.hp.com>

	* java/xslt/debugger/saxon/SaxonTraceListener.java: Fixed the next
	operation.

2001-03-22  Ovidiu Predescu  <ovidiu@cup.hp.com>

	* java/xslt/debugger/saxon/SaxonValue.java: Use SaxonType to store
	the type of the value.

	* java/xslt/debugger/saxon/SaxonStyleFrame.java: Fixed typos in
	getGlobalVariables() and getLocalVariables().

2001-03-06  Ovidiu Predescu  <ovidiu@cup.hp.com>

	Started the work on XSLT debugging support.
	
	* java/xslt/debugger/saxon/XSLTDebugger.java: Added.

	* java/xslt/debugger/Debugger.java: Added support code for
	creating the back-end.

	* java/xslt/debugger/XSLTDebuggerIntf.java: Added.

	* java/xslt/debugger/Variable.java: Added.

	* java/xslt/debugger/Observer.java: Added.

	* java/xslt/debugger/Frame.java: Added.

	* java/xslt/debugger/Debugger.java: Added.

	* java/xslt/debugger/Breakpoint.java: Added.

2001-02-26  Ovidiu Predescu  <ovidiu@cup.hp.com>

	* doc/xslt-process.texi: Added new TODO item: Add check to observe
	changes in the Java additional classpath and restart BSH if such
	changes occur while it's running.

Thu Feb 15 01:22:23 2001  Ovidiu Predescu  <ovidiu@cup.hp.com>

	* doc/xslt-process.texi: Reorganized and enhanced the
	documentation.

Sun Feb 11 23:51:24 2001  Ovidiu Predescu  <ovidiu@cup.hp.com>

	* doc/xslt-process.texi: Updated with the latest changes.

	* lisp/xslt-process.el: Move the customization in the programming
	tools submenu.

	* java/xslt/TrAX.java: Added the ability to use a cache with the
	file URL protocol.

Fri Feb  9 09:55:22 2001  Ovidiu Predescu  <ovidiu@cup.hp.com>

	* TODO: Updated.

	* java/xslt/TrAX.java: Added support for cached
	stylesheets. Currently only http: URIs seem to be handled well,
	but file: will follow soon. It looks like the FTP support does not
	work.

Wed Feb  7 19:47:20 2001  Ovidiu Predescu  <ovidiu@cup.hp.com>

	* lisp/xslt-process.el: Renamed Xalan2 to TrAX as the support code
	works with any TrAX processor.

Thu Jan  4 01:23:25 2001  Ovidiu Predescu  <ovidiu@cup.hp.com>

	* doc/xslt-process.texi: Updated the documentation for the 1.1
	release.

Wed Jan  3 23:37:15 2001  Ovidiu Predescu  <ovidiu@cup.hp.com>

	* lisp/xslt-process.el: Added xslt-process-additional-classpath to
	allow passing additional classpath arguments to BSH (suggestion
	from T.V. Raman <tvraman@almaden.ibm.com>).

Fri Dec 15 00:29:44 2000  Ovidiu Predescu  <ovidiu@cup.hp.com>

	* lisp/xslt-process.el: Handle user agent specification for
	Cocoon.
	* java/xslt/Cocoon1.java: Handle user agent specification.

Thu Dec 14 22:45:43 2000  Ovidiu Predescu  <ovidiu@cup.hp.com>

	* lisp/xslt-process.el: Always display error messages in a buffer,
	even when applying the stylesheet fails because of JVM startup
	problems.
